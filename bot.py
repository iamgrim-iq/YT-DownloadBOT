# this is a good bot
# but i just added some fixes.
# it's really helpful for me, when savefrom or ytmeta doesnt work.

import os
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import yt_dlp
import time
from config import TOKEN, DOWNLOAD_PATH

last_update_time = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if not os.path.exists(DOWNLOAD_PATH):
    os.makedirs(DOWNLOAD_PATH)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_states = {}

def create_main_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("üé• –í–∏–¥–µ–æ", callback_data="video"),
        InlineKeyboardButton("üéµ –ê—É–¥–∏–æ", callback_data="audio")
    )
    return keyboard

def create_video_formats_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤–∏–¥–µ–æ"""
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("MP4", callback_data="format_mp4"),
        InlineKeyboardButton("AVI", callback_data="format_avi"),
        InlineKeyboardButton("MOV", callback_data="format_mov")
    )
    keyboard.row(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return keyboard

def create_audio_formats_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∞—É–¥–∏–æ"""
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("MP3", callback_data="format_mp3"),
        InlineKeyboardButton("WAV", callback_data="format_wav")
    )
    keyboard.row(
        InlineKeyboardButton("AIFF", callback_data="format_aiff"),
        InlineKeyboardButton("OGG", callback_data="format_ogg")
    )
    keyboard.row(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return keyboard

def progress_bar(current, total):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
    progress = int(current * 10 / total)
    return "üü©" * progress + "‚¨ú" * (10 - progress)

def progress_hook(d, message):
    """–•—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏"""
    if d['status'] == 'downloading':
        try:
            total = d.get('total_bytes', 0) or d.get('total_bytes_estimate', 0)
            downloaded = d.get('downloaded_bytes', 0)
            
            if total:
                current_time = time.time()
                message_key = f"{message.chat.id}_{message.message_id}"
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 2 —Å–µ–∫—É–Ω–¥—ã
                if (message_key not in last_update_time or 
                    current_time - last_update_time[message_key] >= 2):
                    
                    percentage = (downloaded / total) * 100
                    progress = progress_bar(downloaded, total)
                    
                    bot.edit_message_text(
                        f"‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...\n{progress} {percentage:.1f}%",
                        message.chat.id,
                        message.message_id
                    )
                    last_update_time[message_key] = current_time
                    
        except Exception as e:
            print(f"Error in progress hook: {e}")

@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = ("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å YouTube!\n\n"
                   "üé• –Ø –º–æ–≥—É —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n"
                   "‚Ä¢ MP4, AVI, MOV –¥–ª—è –≤–∏–¥–µ–æ\n"
                   "‚Ä¢ MP3, WAV, AIFF, OGG –¥–ª—è –∞—É–¥–∏–æ\n\n"
                   "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:")
    bot.send_message(message.chat.id, welcome_text, reply_markup=create_main_keyboard())

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
    if call.data == "video":
        bot.edit_message_text(
            "üé• –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ:",
            call.message.chat.id,
            call.message.message_id,
            reply_markup=create_video_formats_keyboard()
        )
    
    elif call.data == "audio":
        bot.edit_message_text(
            "üéµ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ:",
            call.message.chat.id,
            call.message.message_id,
            reply_markup=create_audio_formats_keyboard()
        )
    
    elif call.data == "back_to_main":
        bot.edit_message_text(
            "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:",
            call.message.chat.id,
            call.message.message_id,
            reply_markup=create_main_keyboard()
        )
    
    elif call.data.startswith("format_"):
        format_type = call.data.split("_")[1]
        user_states[call.message.chat.id] = format_type
        bot.edit_message_text(
            "üîó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ:",
            call.message.chat.id,
            call.message.message_id
        )

@bot.message_handler(func=lambda message: True)
def handle_url(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ URL"""
    if message.text.startswith(('https://youtube.com', 'https://www.youtube.com', 'https://youtu.be')):
        chat_id = message.chat.id
        if chat_id not in user_states:
            bot.reply_to(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return

        format_type = user_states[chat_id]
        progress_message = bot.reply_to(message, "‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...")

        try:
            output_template = os.path.join(DOWNLOAD_PATH, '%(title)s.%(ext)s')
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ yt-dlp
            if format_type in ['mp4', 'avi', 'mov']:
                ydl_opts = {
                    'format': 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best',
                    'progress_hooks': [lambda d: progress_hook(d, progress_message)],
                    'outtmpl': output_template,
                    'merge_output_format': format_type,
                }
            else:  # –∞—É–¥–∏–æ —Ñ–æ—Ä–º–∞—Ç—ã
                ydl_opts = {
                    'format': 'bestaudio/best',
                    'progress_hooks': [lambda d: progress_hook(d, progress_message)],
                    'outtmpl': output_template,
                    'postprocessors': [{
                        'key': 'FFmpegExtractAudio',
                        'preferredcodec': format_type,
                        'preferredquality': '192',
                    }],
                }

            # –ó–∞–≥—Ä—É–∑–∫–∞
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(message.text, download=True)
                filename = ydl.prepare_filename(info)
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                if format_type in ['mp4', 'avi', 'mov']:
                    new_filename = os.path.splitext(filename)[0] + '.' + format_type
                else:
                    new_filename = os.path.splitext(filename)[0] + '.' + format_type
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                if not os.path.exists(new_filename):
                    raise Exception(f"–§–∞–π–ª {new_filename} –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
                with open(new_filename, 'rb') as file:
                    if format_type in ['mp4', 'avi', 'mov']:
                        bot.send_video(chat_id, file, caption="‚úÖ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!")
                    else:
                        bot.send_audio(chat_id, file, caption="‚úÖ –í–∞—à–µ –∞—É–¥–∏–æ –≥–æ—Ç–æ–≤–æ!")
                
                # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                os.remove(new_filename)
                
                bot.edit_message_text(
                    "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
                    progress_message.chat.id,
                    progress_message.message_id
                )

        except Exception as e:
            bot.edit_message_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {str(e)}",
                progress_message.chat.id,
                progress_message.message_id
            )
            print(f"Error details: {e}")
            
    else:
        bot.reply_to(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ")

    message_key = f"{progress_message.chat.id}_{progress_message.message_id}"
    if message_key in last_update_time:
        del last_update_time[message_key]

if __name__ == '__main__':
    bot.infinity_polling()
